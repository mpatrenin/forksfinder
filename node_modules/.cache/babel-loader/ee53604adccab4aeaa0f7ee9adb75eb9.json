{"ast":null,"code":"var _jsxFileName = \"/Users/mikepatrenin/Downloads/ForksFinder/src/components/Explore.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class Explore extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInputValue = () => {\n      return this.input.value;\n    };\n\n    this.setInputValue = val => {\n      // Generally mutating DOM is a bad idea in React components,\n      // but doing this for a single uncontrolled field is less fuss\n      // than making it controlled and maintaining a state for it.\n      this.input.value = val;\n    };\n\n    this.handleKeyUp = e => {\n      if (e.keyCode === 13) {\n        this.handleGoClick();\n      }\n    };\n\n    this.handleGoClick = () => {\n      this.props.onChange(this.getInputValue());\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setInputValue(this.props.value);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Type a owner/repo name and Go:\"), /*#__PURE__*/React.createElement(\"input\", {\n      size: \"45\",\n      ref: input => this.input = input,\n      defaultValue: this.props.value,\n      onKeyUp: this.handleKeyUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleGoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Go!\"));\n  }\n\n}\nExplore.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/src/components/Explore.js"],"names":["React","Component","PropTypes","Explore","getInputValue","input","value","setInputValue","val","handleKeyUp","e","keyCode","handleGoClick","props","onChange","componentDidUpdate","prevProps","render","propTypes","string","isRequired","func"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAY7CG,aAZ6C,GAY7B,MAAM;AACpB,aAAO,KAAKC,KAAL,CAAWC,KAAlB;AACD,KAd4C;;AAAA,SAgB7CC,aAhB6C,GAgB5BC,GAAD,IAAS;AACvB;AACA;AACA;AACA,WAAKH,KAAL,CAAWC,KAAX,GAAmBE,GAAnB;AACD,KArB4C;;AAAA,SAuB7CC,WAvB6C,GAuB9BC,CAAD,IAAO;AACnB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB,aAAKC,aAAL;AACD;AACF,KA3B4C;;AAAA,SA6B7CA,aA7B6C,GA6B7B,MAAM;AACpB,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKV,aAAL,EAApB;AACD,KA/B4C;AAAA;;AAM7CW,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACV,KAAV,KAAoB,KAAKO,KAAL,CAAWP,KAAnC,EAA0C;AACxC,WAAKC,aAAL,CAAmB,KAAKM,KAAL,CAAWP,KAA9B;AACD;AACF;;AAuBDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAEE;AAAO,MAAA,IAAI,EAAC,IAAZ;AACO,MAAA,GAAG,EAAGZ,KAAD,IAAW,KAAKA,KAAL,GAAaA,KADpC;AAEO,MAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWP,KAFhC;AAGO,MAAA,OAAO,EAAE,KAAKG,WAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME;AAAQ,MAAA,OAAO,EAAE,KAAKG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF;AAaD;;AA/C4C;AAA1BT,O,CACZe,S,GAAY;AACjBZ,EAAAA,KAAK,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IAAV,CAAeD;AAFR,C","sourcesContent":["/* eslint-disable no-undef */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Explore extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setInputValue(this.props.value)\n    }\n  }\n\n  getInputValue = () => {\n    return this.input.value\n  }\n\n  setInputValue = (val) => {\n    // Generally mutating DOM is a bad idea in React components,\n    // but doing this for a single uncontrolled field is less fuss\n    // than making it controlled and maintaining a state for it.\n    this.input.value = val\n  }\n\n  handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      this.handleGoClick()\n    }\n  }\n\n  handleGoClick = () => {\n    this.props.onChange(this.getInputValue())\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Type a owner/repo name and Go:</p>\n        <input size=\"45\"\n               ref={(input) => this.input = input}\n               defaultValue={this.props.value}\n               onKeyUp={this.handleKeyUp} />\n        <button onClick={this.handleGoClick}>\n          Go!\n        </button>\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}