{"ast":null,"code":"import { CALL_API, Schemas } from '../middleware/api';\nexport var USER_REQUEST = 'USER_REQUEST';\nexport var USER_SUCCESS = 'USER_SUCCESS';\nexport var USER_FAILURE = 'USER_FAILURE'; // Fetches a single user from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\n\nvar fetchUser = function fetchUser(login) {\n  return {\n    [CALL_API]: {\n      types: [USER_REQUEST, USER_SUCCESS, USER_FAILURE],\n      endpoint: \"users/\".concat(login),\n      schema: Schemas.USER\n    }\n  };\n};\n\nexport var loadUser = function loadUser(login) {\n  var requiredFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return function (dispatch, getState) {\n    var user = getState().entities.users[login];\n\n    if (user && requiredFields.every(function (key) {\n      return user.hasOwnProperty(key);\n    })) {\n      return null;\n    }\n\n    return dispatch(fetchUser(login));\n  };\n};\nexport var REPO_REQUEST = 'REPO_REQUEST';\nexport var REPO_SUCCESS = 'REPO_SUCCESS';\nexport var REPO_FAILURE = 'REPO_FAILURE'; // Fetches a forks from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\n\nvar fetchForks = function fetchForks(fullName, nextPageURL) {\n  return {\n    fullName: fullName,\n    [CALL_API]: {\n      types: [FORKS_REQUEST, FORKS_SUCCESS, FORKS_FAILURE],\n      endpoint: nextPageURL,\n      schema: Schemas.FORKS_ARRAY\n    }\n  };\n};\n\nexport var loadForks = function loadForks(fullName, nextPage) {\n  return function (dispatch, getState) {\n    var counter = 0;\n\n    var _ref = getState().pagination.ForksReducer[fullName] || {},\n        _ref$nextPageUrl = _ref.nextPageUrl,\n        nextPageUrl = _ref$nextPageUrl === void 0 ? \"repos/\".concat(fullName, \"/forks\") : _ref$nextPageUrl,\n        _ref$pageCount = _ref.pageCount,\n        pageCount = _ref$pageCount === void 0 ? 0 : _ref$pageCount;\n\n    if (getState().pagination.ForksReducer[fullName]) {\n      if (counter < getState().pagination.ForksReducer[fullName].pageCount) {\n        counter = getState().pagination.ForksReducer[fullName].pageCount;\n      }\n    }\n\n    if (pageCount > 0 && !nextPage) {\n      console.log('returning null');\n      return null;\n    }\n\n    var url = new URL(window.location.href);\n    var search_params = url.searchParams;\n\n    if (!nextPage && search_params.get('page') > 1) {\n      var waitForNextPage = function waitForNextPage() {\n        if (getState().pagination.ForksReducer[fullName]) {\n          console.log(\"im here, \".concat(getState().pagination.ForksReducer[fullName].nextPageUrl));\n          var jumptopage = getState().pagination.ForksReducer[fullName].nextPageUrl;\n          console.log(jumptopage.toString().slice(0, -1).concat(neededpage));\n          nextPageUrl = jumptopage.toString().slice(0, -1).concat(neededpage);\n          counter = neededpage;\n          console.log(counter);\n          return dispatch(fetchForks(fullName, nextPageUrl));\n        } else {\n          console.log(\"waiting for nextpage..\");\n          setTimeout(waitForNextPage, 250);\n        }\n      };\n\n      var neededpage = Number(search_params.get('page'));\n      waitForNextPage();\n    }\n\n    if (!window.location.href.includes('page')) {\n      search_params.set('page', '1');\n      url.search = search_params.toString();\n      var new_url = url.toString();\n      window.location.href = new_url;\n    }\n\n    if (counter > 0) {\n      var stateObj = {\n        page: '0'\n      };\n      window.history.replaceState(stateObj, 'page', \"?page=\".concat(counter + 1));\n    }\n\n    return dispatch(fetchForks(fullName, nextPageUrl));\n  };\n};\nexport var FORKS_REQUEST = 'FORKS_REQUEST';\nexport var FORKS_SUCCESS = 'FORKS_SUCCESS';\nexport var FORKS_FAILURE = 'FORKS_FAILURE'; // Fetches a single repository from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\n\nvar fetchRepo = function fetchRepo(fullName) {\n  return {\n    [CALL_API]: {\n      types: [REPO_REQUEST, REPO_SUCCESS, REPO_FAILURE],\n      endpoint: \"repos/\".concat(fullName),\n      schema: Schemas.REPO\n    }\n  };\n}; // Fetches a single repository from Github API unless it is cached.\n// Relies on Redux Thunk middleware.\n\n\nexport var loadRepo = function loadRepo(fullName) {\n  var requiredFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return function (dispatch, getState) {\n    var repo = getState().entities.repos[fullName];\n\n    if (repo && requiredFields.every(function (key) {\n      return repo.hasOwnProperty(key);\n    })) {\n      return null;\n    }\n\n    return dispatch(fetchRepo(fullName));\n  };\n};\nexport var RESET_ERROR_MESSAGE = 'RESET_ERROR_MESSAGE'; // Resets the currently visible error message.\n\nexport var resetErrorMessage = function resetErrorMessage() {\n  return {\n    type: RESET_ERROR_MESSAGE\n  };\n};","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/src/actions/index.js"],"names":["CALL_API","Schemas","USER_REQUEST","USER_SUCCESS","USER_FAILURE","fetchUser","login","types","endpoint","schema","USER","loadUser","requiredFields","dispatch","getState","user","entities","users","every","key","hasOwnProperty","REPO_REQUEST","REPO_SUCCESS","REPO_FAILURE","fetchForks","fullName","nextPageURL","FORKS_REQUEST","FORKS_SUCCESS","FORKS_FAILURE","FORKS_ARRAY","loadForks","nextPage","counter","pagination","ForksReducer","nextPageUrl","pageCount","console","log","url","URL","window","location","href","search_params","searchParams","get","waitForNextPage","jumptopage","toString","slice","concat","neededpage","setTimeout","Number","includes","set","search","new_url","stateObj","page","history","replaceState","fetchRepo","REPO","loadRepo","repo","repos","RESET_ERROR_MESSAGE","resetErrorMessage","type"],"mappings":"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","sourcesContent":["import { CALL_API, Schemas } from '../middleware/api'\n\nexport const USER_REQUEST = 'USER_REQUEST'\nexport const USER_SUCCESS = 'USER_SUCCESS'\nexport const USER_FAILURE = 'USER_FAILURE'\n\n// Fetches a single user from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\n\nconst fetchUser = login => ({\n  [CALL_API]: {\n    types: [ USER_REQUEST, USER_SUCCESS, USER_FAILURE ],\n    endpoint: `users/${login}`,\n    schema: Schemas.USER\n  }\n})\n\nexport const loadUser = (login, requiredFields = []) => (dispatch, getState) => {\n  const user = getState().entities.users[login]\n  if (user && requiredFields.every(key => user.hasOwnProperty(key))) {\n    return null\n  }\n\n  return dispatch(fetchUser(login))\n}\n\nexport const REPO_REQUEST = 'REPO_REQUEST'\nexport const REPO_SUCCESS = 'REPO_SUCCESS'\nexport const REPO_FAILURE = 'REPO_FAILURE'\n\n// Fetches a forks from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\n\nconst fetchForks = (fullName, nextPageURL) => ({\n  fullName,\n  [CALL_API]: {\n    types: [ FORKS_REQUEST, FORKS_SUCCESS, FORKS_FAILURE ],\n    endpoint: nextPageURL,\n    schema: Schemas.FORKS_ARRAY\n  }\n})\n\nexport const loadForks = (fullName, nextPage) => (dispatch, getState) => {\n  let counter = 0\n  let {\n    nextPageUrl = `repos/${fullName}/forks`,\n    pageCount = 0\n  } = getState().pagination.ForksReducer[fullName] || {}\n\n  if (getState().pagination.ForksReducer[fullName]){\n    if (counter < getState().pagination.ForksReducer[fullName].pageCount) \n    {counter = getState().pagination.ForksReducer[fullName].pageCount}\n  }\n\n  if (pageCount > 0 && !nextPage) {\n    console.log('returning null')\n    return null\n  }\n\n  let url = new URL(window.location.href)\n  let search_params = url.searchParams\n\n  if (!nextPage && search_params.get('page') > 1){\n    const neededpage = Number(search_params.get('page'))\n    function waitForNextPage(){\n      if (getState().pagination.ForksReducer[fullName]) {\n        console.log(`im here, ${getState().pagination.ForksReducer[fullName].nextPageUrl}`)\n        let jumptopage = getState().pagination.ForksReducer[fullName].nextPageUrl\n        console.log(jumptopage.toString().slice(0,-1).concat(neededpage))\n        nextPageUrl = jumptopage.toString().slice(0,-1).concat(neededpage)\n        counter = neededpage\n        console.log(counter)\n        return dispatch(fetchForks(fullName, nextPageUrl))\n      }\n      else {\n        console.log(`waiting for nextpage..`)\n        setTimeout(waitForNextPage, 250)\n      }\n    }\n    waitForNextPage();\n  }\n\n  if (!window.location.href.includes('page')){\n    search_params.set('page', '1')\n    url.search = search_params.toString()\n    let new_url = url.toString()\n    window.location.href = new_url\n   } \n  \n   if (counter > 0) {\n    const stateObj = { page: '0' }\n    window.history.replaceState(stateObj, 'page', `?page=${counter+1}`)\n   }\n\n  return dispatch(fetchForks(fullName, nextPageUrl))\n  }\n\n  export const FORKS_REQUEST = 'FORKS_REQUEST'\n  export const FORKS_SUCCESS = 'FORKS_SUCCESS'\n  export const FORKS_FAILURE = 'FORKS_FAILURE'\n\n// Fetches a single repository from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\nconst fetchRepo = fullName => ({\n  [CALL_API]: {\n    types: [ REPO_REQUEST, REPO_SUCCESS, REPO_FAILURE ],\n    endpoint: `repos/${fullName}`,\n    schema: Schemas.REPO\n  }\n})\n\n// Fetches a single repository from Github API unless it is cached.\n// Relies on Redux Thunk middleware.\nexport const loadRepo = (fullName, requiredFields = []) => (dispatch, getState) => {\n  const repo = getState().entities.repos[fullName]\n  if (repo && requiredFields.every(key => repo.hasOwnProperty(key))) {\n    return null\n  }\n\n  return dispatch(fetchRepo(fullName))\n}\n\n\nexport const RESET_ERROR_MESSAGE = 'RESET_ERROR_MESSAGE'\n\n// Resets the currently visible error message.\nexport const resetErrorMessage = () => ({\n    type: RESET_ERROR_MESSAGE\n})\n"]},"metadata":{},"sourceType":"module"}