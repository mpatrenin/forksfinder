{"ast":null,"code":"import _classCallCheck from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/mikepatrenin/Downloads/ForksFinder/src/components/Explore.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Explore = /*#__PURE__*/function (_Component) {\n  _inherits(Explore, _Component);\n\n  var _super = _createSuper(Explore);\n\n  function Explore() {\n    var _this;\n\n    _classCallCheck(this, Explore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getInputValue = function () {\n      return _this.input.value;\n    };\n\n    _this.setInputValue = function (val) {\n      // Generally mutating DOM is a bad idea in React components,\n      // but doing this for a single uncontrolled field is less fuss\n      // than making it controlled and maintaining a state for it.\n      _this.input.value = val;\n    };\n\n    _this.handleKeyUp = function (e) {\n      if (e.keyCode === 13) {\n        _this.handleGoClick();\n      }\n    };\n\n    _this.handleGoClick = function () {\n      _this.props.onChange(_this.getInputValue());\n    };\n\n    return _this;\n  }\n\n  _createClass(Explore, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value) {\n        this.setInputValue(this.props.value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Type a owner/repo name and Go:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          size: \"45\",\n          ref: function ref(input) {\n            return _this2.input = input;\n          },\n          defaultValue: this.props.value,\n          onKeyUp: this.handleKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleGoClick,\n          children: \"Go!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Explore;\n}(Component);\n\nExplore.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport { Explore as default };","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/src/components/Explore.js"],"names":["React","Component","PropTypes","Explore","getInputValue","input","value","setInputValue","val","handleKeyUp","e","keyCode","handleGoClick","props","onChange","prevProps","propTypes","string","isRequired","func"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;IAEqBC,O;;;;;;;;;;;;;;;;UAYnBC,a,GAAgB,YAAM;AACpB,aAAO,MAAKC,KAAL,CAAWC,KAAlB;AACD,K;;UAEDC,a,GAAgB,UAACC,GAAD,EAAS;AACvB;AACA;AACA;AACA,YAAKH,KAAL,CAAWC,KAAX,GAAmBE,GAAnB;AACD,K;;UAEDC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB,cAAKC,aAAL;AACD;AACF,K;;UAEDA,a,GAAgB,YAAM;AACpB,YAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKV,aAAL,EAApB;AACD,K;;;;;;;WAzBD,4BAAmBW,SAAnB,EAA8B;AAC5B,UAAIA,SAAS,CAACT,KAAV,KAAoB,KAAKO,KAAL,CAAWP,KAAnC,EAA0C;AACxC,aAAKC,aAAL,CAAmB,KAAKM,KAAL,CAAWP,KAA9B;AACD;AACF;;;WAuBD,kBAAS;AAAA;;AACP,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,IAAZ;AACO,UAAA,GAAG,EAAE,aAACD,KAAD;AAAA,mBAAW,MAAI,CAACA,KAAL,GAAaA,KAAxB;AAAA,WADZ;AAEO,UAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWP,KAFhC;AAGO,UAAA,OAAO,EAAE,KAAKG;AAHrB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAQ,UAAA,OAAO,EAAE,KAAKG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;;;;EA/CkCX,S;;AAAhBE,O,CACZa,S,GAAY;AACjBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEjBJ,EAAAA,QAAQ,EAAEZ,SAAS,CAACiB,IAAV,CAAeD;AAFR,C;SADAf,O","sourcesContent":["/* eslint-disable no-undef */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Explore extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setInputValue(this.props.value)\n    }\n  }\n\n  getInputValue = () => {\n    return this.input.value\n  }\n\n  setInputValue = (val) => {\n    // Generally mutating DOM is a bad idea in React components,\n    // but doing this for a single uncontrolled field is less fuss\n    // than making it controlled and maintaining a state for it.\n    this.input.value = val\n  }\n\n  handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      this.handleGoClick()\n    }\n  }\n\n  handleGoClick = () => {\n    this.props.onChange(this.getInputValue())\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Type a owner/repo name and Go:</p>\n        <input size=\"45\"\n               ref={(input) => this.input = input}\n               defaultValue={this.props.value}\n               onKeyUp={this.handleKeyUp} />\n        <button onClick={this.handleGoClick}>\n          Go!\n        </button>\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}