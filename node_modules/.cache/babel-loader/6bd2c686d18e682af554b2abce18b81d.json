{"ast":null,"code":"var _jsxFileName = \"/Users/mikepatrenin/Downloads/ForksFinder/src/containers/RepoPage.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { loadForks } from '../actions';\nimport List from '../components/List';\n\nconst loadData = props => {\n  const forksInfo = props.forksInfo;\n  props.loadForks(forksInfo);\n};\n\nclass RepoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoadMoreClick = () => {\n      this.props.loadForks(this.props.forksInfo, true);\n    };\n  }\n\n  componentDidMount() {\n    loadData(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.forksInfo !== this.props.forksInfo) {\n      loadData(this.props);\n    }\n  }\n\n  render() {\n    const forks = this.props.forks;\n\n    if (!forks) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }\n      }, \"Loading  details...\"));\n    }\n\n    const _this$props = this.props,\n          Forkers = _this$props.Forkers,\n          ForksPagination = _this$props.ForksPagination;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, Object.assign({\n      renderItem: this.renderUser,\n      forks: forks,\n      items: Forkers,\n      onLoadMoreClick: this.handleLoadMoreClick,\n      loadingLabel: \"Loading . ..\"\n    }, ForksPagination, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nRepoPage.propTypes = {\n  repo: PropTypes.object,\n  forksInfo: PropTypes.string.isRequired,\n  forks: PropTypes.array,\n  owner: PropTypes.object,\n  Forkers: PropTypes.array.isRequired,\n  ForksPagination: PropTypes.object,\n  loadForks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // We need to lower case the login/name due to the way GitHub's API behaves.\n  // Have a look at ../middleware/api.js for more details.\n  const repo = ownProps.match.params.forks.toLowerCase();\n  const login = ownProps.match.params.login.toLowerCase();\n  const ForksReducer = state.pagination.ForksReducer,\n        _state$entities = state.entities,\n        users = _state$entities.users,\n        repos = _state$entities.repos,\n        forks = _state$entities.forks;\n  const forksInfo = \"\".concat(login, \"/\").concat(repo);\n  const ForksPagination = ForksReducer[forksInfo] || {\n    ids: []\n  };\n  const Forkers = ForksPagination.ids.map(id => forks[id]);\n  return {\n    forksInfo,\n    forks: Object.values(forks),\n    Forkers,\n    ForksPagination,\n    repo: repos[forksInfo],\n    owner: users[login]\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  loadForks\n})(RepoPage));","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/src/containers/RepoPage.js"],"names":["React","Component","PropTypes","connect","withRouter","loadForks","List","loadData","props","forksInfo","RepoPage","handleLoadMoreClick","componentDidMount","componentDidUpdate","prevProps","render","forks","Forkers","ForksPagination","renderUser","propTypes","repo","object","string","isRequired","array","owner","func","mapStateToProps","state","ownProps","match","params","toLowerCase","login","ForksReducer","pagination","entities","users","repos","ids","map","id","Object","values"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { loadForks } from '../actions'\nimport List from '../components/List'\n\nconst loadData = props => {\n  const { forksInfo } = props\n  props.loadForks(forksInfo)\n}\n\nclass RepoPage extends Component {\n  static propTypes = {\n    repo: PropTypes.object,\n    forksInfo: PropTypes.string.isRequired,\n    forks: PropTypes.array,\n    owner: PropTypes.object,\n    Forkers: PropTypes.array.isRequired,\n    ForksPagination: PropTypes.object,\n    loadForks: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    loadData(this.props)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.forksInfo !== this.props.forksInfo) {\n      loadData(this.props)\n    }\n  }\n\n  handleLoadMoreClick = () => {\n    this.props.loadForks(this.props.forksInfo, true)\n  }\n\n  render() {\n    const { forks } = this.props\n\n    if (!forks) {\n      return <h1><i>Loading  details...</i></h1>\n    }\n\n    const { Forkers, ForksPagination } = this.props\n    return (\n      <>\n        <List renderItem={this.renderUser}\n              forks={forks} \n              items={Forkers}\n              onLoadMoreClick={this.handleLoadMoreClick}\n              loadingLabel={`Loading . ..`}\n              {...ForksPagination} />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // We need to lower case the login/name due to the way GitHub's API behaves.\n  // Have a look at ../middleware/api.js for more details.\n  const repo = ownProps.match.params.forks.toLowerCase()\n  const login = ownProps.match.params.login.toLowerCase()\n\n\n  const {\n    pagination: { ForksReducer },\n    entities: { users, repos, forks }\n  } = state;\n\n  const forksInfo = `${login}/${repo}`\n  const ForksPagination = ForksReducer[forksInfo] || { ids: [] }\n  const Forkers = ForksPagination.ids.map(id => forks[id])\n\n  return {\n    forksInfo,\n    forks: Object.values(forks),\n    Forkers,\n    ForksPagination,\n    repo: repos[forksInfo],\n    owner: users[login],\n    \n  }\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  loadForks})(RepoPage))\n"]},"metadata":{},"sourceType":"module"}