{"ast":null,"code":"import _objectSpread from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mikepatrenin/Downloads/ForksFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/mikepatrenin/Downloads/ForksFinder/src/containers/RepoPage.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { loadForks } from '../actions';\nimport List from '../components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar loadData = function loadData(props) {\n  var forksInfo = props.forksInfo;\n  props.loadForks(forksInfo);\n};\n\nvar RepoPage = /*#__PURE__*/function (_Component) {\n  _inherits(RepoPage, _Component);\n\n  var _super = _createSuper(RepoPage);\n\n  function RepoPage() {\n    var _this;\n\n    _classCallCheck(this, RepoPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleLoadMoreClick = function () {\n      _this.props.loadForks(_this.props.forksInfo, true);\n    };\n\n    return _this;\n  }\n\n  _createClass(RepoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      loadData(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.forksInfo !== this.props.forksInfo) {\n        loadData(this.props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var forks = this.props.forks;\n\n      if (!forks) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Loading  details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this);\n      }\n\n      var _this$props = this.props,\n          Forkers = _this$props.Forkers,\n          ForksPagination = _this$props.ForksPagination;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(List, _objectSpread({\n          renderItem: this.renderUser,\n          forks: forks,\n          items: Forkers,\n          onLoadMoreClick: this.handleLoadMoreClick,\n          loadingLabel: \"Loading . ..\"\n        }, ForksPagination), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return RepoPage;\n}(Component);\n\nRepoPage.propTypes = {\n  repo: PropTypes.object,\n  forksInfo: PropTypes.string.isRequired,\n  forks: PropTypes.array,\n  owner: PropTypes.object,\n  Forkers: PropTypes.array.isRequired,\n  ForksPagination: PropTypes.object,\n  loadForks: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  // We need to lower case the login/name due to the way GitHub's API behaves.\n  // Have a look at ../middleware/api.js for more details.\n  var repo = ownProps.match.params.forks.toLowerCase();\n  var login = ownProps.match.params.login.toLowerCase();\n  var ForksReducer = state.pagination.ForksReducer,\n      _state$entities = state.entities,\n      users = _state$entities.users,\n      repos = _state$entities.repos,\n      forks = _state$entities.forks;\n  var forksInfo = \"\".concat(login, \"/\").concat(repo);\n  var ForksPagination = ForksReducer[forksInfo] || {\n    ids: []\n  };\n  var Forkers = ForksPagination.ids.map(function (id) {\n    return forks[id];\n  });\n  return {\n    forksInfo: forksInfo,\n    forks: Object.values(forks),\n    Forkers: Forkers,\n    ForksPagination: ForksPagination,\n    repo: repos[forksInfo],\n    owner: users[login]\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  loadForks: loadForks\n})(RepoPage));","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/src/containers/RepoPage.js"],"names":["React","Component","PropTypes","connect","withRouter","loadForks","List","loadData","props","forksInfo","RepoPage","handleLoadMoreClick","prevProps","forks","Forkers","ForksPagination","renderUser","propTypes","repo","object","string","isRequired","array","owner","func","mapStateToProps","state","ownProps","match","params","toLowerCase","login","ForksReducer","pagination","entities","users","repos","ids","map","id","Object","values"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { loadForks } from '../actions'\nimport List from '../components/List'\n\nconst loadData = props => {\n  const { forksInfo } = props\n  props.loadForks(forksInfo)\n}\n\nclass RepoPage extends Component {\n  static propTypes = {\n    repo: PropTypes.object,\n    forksInfo: PropTypes.string.isRequired,\n    forks: PropTypes.array,\n    owner: PropTypes.object,\n    Forkers: PropTypes.array.isRequired,\n    ForksPagination: PropTypes.object,\n    loadForks: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    loadData(this.props)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.forksInfo !== this.props.forksInfo) {\n      loadData(this.props)\n    }\n  }\n\n  handleLoadMoreClick = () => {\n    this.props.loadForks(this.props.forksInfo, true)\n  }\n\n  render() {\n    const { forks } = this.props\n\n    if (!forks) {\n      return <h1><i>Loading  details...</i></h1>\n    }\n\n    const { Forkers, ForksPagination } = this.props\n    return (\n      <>\n        <List renderItem={this.renderUser}\n              forks={forks} \n              items={Forkers}\n              onLoadMoreClick={this.handleLoadMoreClick}\n              loadingLabel={`Loading . ..`}\n              {...ForksPagination} />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // We need to lower case the login/name due to the way GitHub's API behaves.\n  // Have a look at ../middleware/api.js for more details.\n  const repo = ownProps.match.params.forks.toLowerCase()\n  const login = ownProps.match.params.login.toLowerCase()\n\n\n  const {\n    pagination: { ForksReducer },\n    entities: { users, repos, forks }\n  } = state;\n\n  const forksInfo = `${login}/${repo}`\n  const ForksPagination = ForksReducer[forksInfo] || { ids: [] }\n  const Forkers = ForksPagination.ids.map(id => forks[id])\n\n  return {\n    forksInfo,\n    forks: Object.values(forks),\n    Forkers,\n    ForksPagination,\n    repo: repos[forksInfo],\n    owner: users[login],\n    \n  }\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  loadForks})(RepoPage))\n"]},"metadata":{},"sourceType":"module"}