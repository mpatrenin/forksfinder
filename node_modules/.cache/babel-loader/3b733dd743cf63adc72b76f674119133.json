{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nexports.default = function (hexColor, lightness) {\n  var hex = String(hexColor).replace(/[^0-9a-f]/gi, '');\n\n  if (hex.length < 6) {\n    hex = hex.replace(/(.)/g, '$1$1');\n  }\n\n  var lum = lightness || 0;\n  var rgb = '#';\n  var c = void 0;\n\n  for (var i = 0; i < 3; ++i) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += ('00' + c).substr(c.length);\n  }\n\n  return rgb;\n};","map":{"version":3,"sources":["/Users/mikepatrenin/Downloads/ForksFinder/node_modules/redux-devtools-log-monitor/lib/brighten.js"],"names":["exports","__esModule","default","hexColor","lightness","hex","String","replace","length","lum","rgb","c","i","parseInt","substr","Math","round","min","max","toString"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEAD,OAAO,CAACE,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,SAApB,EAA+B;AAC/C,MAAIC,GAAG,GAAGC,MAAM,CAACH,QAAD,CAAN,CAAiBI,OAAjB,CAAyB,aAAzB,EAAwC,EAAxC,CAAV;;AACA,MAAIF,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAoB;AAClBH,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,MAApB,CAAN;AACD;;AACD,MAAIE,GAAG,GAAGL,SAAS,IAAI,CAAvB;AAEA,MAAIM,GAAG,GAAG,GAAV;AACA,MAAIC,CAAC,GAAG,KAAK,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1BD,IAAAA,CAAC,GAAGE,QAAQ,CAACR,GAAG,CAACS,MAAJ,CAAWF,CAAC,GAAG,CAAf,EAAkB,CAAlB,CAAD,EAAuB,EAAvB,CAAZ;AACAD,IAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAYP,CAAC,GAAGA,CAAC,GAAGF,GAApB,CAAT,EAAmC,GAAnC,CAAX,EAAoDU,QAApD,CAA6D,EAA7D,CAAJ;AACAT,IAAAA,GAAG,IAAI,CAAC,OAAOC,CAAR,EAAWG,MAAX,CAAkBH,CAAC,CAACH,MAApB,CAAP;AACD;;AACD,SAAOE,GAAP;AACD,CAfD","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nexports.default = function (hexColor, lightness) {\n  var hex = String(hexColor).replace(/[^0-9a-f]/gi, '');\n  if (hex.length < 6) {\n    hex = hex.replace(/(.)/g, '$1$1');\n  }\n  var lum = lightness || 0;\n\n  var rgb = '#';\n  var c = void 0;\n  for (var i = 0; i < 3; ++i) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += ('00' + c).substr(c.length);\n  }\n  return rgb;\n};"]},"metadata":{},"sourceType":"script"}